// https://leetcode.com/problems/middle-of-the-linked-list/description/


// Approach 1: While Loop
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode *slow=head, *fast=head;
        while(fast!=nullptr && fast->next!=nullptr){
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
    }
};
/*
If N is the number of nodes, then:
TC-> O(N)
SC-> O(1)
*/