// https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/

// Approach 1: Binary Search
class Solution {
public:
    int findMin(vector<int>& nums) {
        int L = 0, H = nums.size() - 1;

        while (L < H) {
            int M = L + (H - L) / 2;

            if (nums[M] > nums[H]) {
                // Minimum must be to the right of M
                L = M + 1;
            }
            else {
                // Minimum could be M or to the left
                H = M;
            }
        }

        return nums[L]; // or nums[H], since L == H
    }
};
/*
If N = size of nums array, then:

Time Complexity: O(logN)

Space Complexity: O(1)
*/