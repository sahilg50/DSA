// https://leetcode.com/problems/reverse-linked-list/description/


// Approach 1: While Loop
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==nullptr || head->next==nullptr) return head;

        ListNode *front=nullptr, *back=nullptr;
        while(head){
            front = head->next;
            head->next = back;
            back = head;
            head = front;
        }
        
        return back;
    }
};
/*
If N is number of nodes, then:
TC-> O(N)
SC-> O(1)
*/