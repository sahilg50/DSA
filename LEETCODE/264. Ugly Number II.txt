// https://leetcode.com/problems/ugly-number-ii/?envType=daily-question&envId=2024-08-18

// Solution: https://leetcode.com/problems/ugly-number-ii/solutions/5652764/beats-100-bottom-up-easy-approach-vid-explanation/?envType=daily-question&envId=2024-08-18


// Approach 1: Optimal
class Solution {
public:
    int nthUglyNumber(int n) {
    
        vector<int> dp(n);
        dp[0] = 1;

        int p2 = 0;
        int p3 = 0;
        int p5 = 0;

        for(int i=1; i<n; i++){
            int twoMul = dp[p2] * 2;
            int threeMul = dp[p3] * 3;
            int fiveMul = dp[p5] * 5;

            dp[i] = min(twoMul, min(threeMul, fiveMul));

            if(dp[i] == twoMul) p2++;
            if(dp[i] == threeMul) p3++;
            if(dp[i] == fiveMul) p5++;
        }

        return dp[n-1];
    }
};
/*
If N = size of array, then:
TC-> O(3*N)
SC-> Dp Array: O(N)
*/