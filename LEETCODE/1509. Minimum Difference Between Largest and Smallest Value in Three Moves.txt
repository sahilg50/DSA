// https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/description/?envType=daily-question&envId=2024-07-03


// Approach 1: Optimal (Sorting + Moving Window)
class Solution {
public:
    int minDifference(vector<int>& nums) {

        int n = nums.size();
        if(n <= 4) return 0;

        sort(nums.begin(), nums.end());

        /*
        Find the difference by calculating each of the following:
        1. Remove 3 elements from front
        2. Remove 2 elements from front and 1 element from behind
        3. Remove 1 element from front and 2 elements from behind
        4. Remove 3 elements from behind
        Then return the minimum of these.
        */

        int result = INT_MAX;
        for(int i=0; i<=3; i++){
            result = min(result, (nums[n-1-i] - nums[3-i]));
        }

        return result;
    }
};
/*
TC-> Sort: O(NLogN)
SC-> Sort: O(LogN)
*/