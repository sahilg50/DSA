// https://leetcode.com/problems/same-tree/


// Approach 1: Optimal 
class Solution {
public:
    bool isSameTree(TreeNode *p, TreeNode *q) {
        if(p==nullptr || q==nullptr) return p==q;

        return (p->val == q->val) 
        && isSameTree(p->left, q->left)
        && isSameTree(p->right, q->right);

    }
};
/*
If M = number of nodes in p, and N = number of nodes in q, then:
TC-> O(min(M, N))
SC-> Recursion Stack: O(M+N)ASC
*/