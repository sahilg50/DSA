// https://leetcode.com/problems/binary-tree-inorder-traversal/description/

// Approach 1: Recursion
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(root==nullptr) return ans;
        
        stack<TreeNode*> S;
        TreeNode *node = root;
        while(true){
            if(node!=nullptr){
                S.push(node);
                node = node->left;
            }
            else{
                if(S.empty()) break;
                node = S.top();
                S.pop();
                ans.push_back(node->val);
                node = node->right;
            }
        }
        return ans;
    }
};
/*
TC-> O(N)
SC-> Stack:O(N)ASC
*/