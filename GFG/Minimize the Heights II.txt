// https://www.geeksforgeeks.org/problems/minimize-the-heights3351/1?page=1&difficulty=Medium&status=unsolved&sortBy=submissions


// Approach 1: Using Sorting
class Solution {
public:
    int getMinDiff(vector<int> &arr, int k) {
        sort(arr.begin(), arr.end());
        
        int n = arr.size();
        int result = arr[n-1] - arr[0];
        
        for(int i=0; i<n; i++){
            if(arr[i] - k < 0) continue;
            else{
                int minH = min(arr[0]+k, arr[i]-k);
                int maxH = max(arr[i-1]+k, arr[n-1]-k);
                result = min(result, (maxH - minH));
            }
        }
        
        return result;
    }
};
/*
If N = size of array, then:
TC-> Sort: O(N*logN) + Iterate: O(N)
SC-> Recursion Stack for Sorting: O(logN)ASC
*/