// https://www.geeksforgeeks.org/problems/union-of-two-sorted-arrays-1587115621/1?page=1&difficulty=Medium&status=unsolved&sortBy=submissions


// Approach 1: 2-pointer
class Solution {
public:
    // a,b : the arrays
    // Function to return a list containing the union of the two arrays.
    vector<int> findUnion(vector<int> &a, vector<int> &b) {
        
        vector<int> Union;
        int m = a.size(), n = b.size();
        
        int i=0, j=0;
        while(i<m && j<n){
            if(a[i] <= b[j]){
                if(Union.empty() || Union.back() != a[i]) Union.push_back(a[i]);
                i++;
            }
            else{
                if(Union.empty() || Union.back() != b[j]) Union.push_back(b[j]);
                j++;
            }
        }
        
        while(i<m){
            if(Union.empty() || Union.back() != a[i]) Union.push_back(a[i]);
            i++;
        }
        
        while(j<n){
            if(Union.empty() || Union.back() != b[j]) Union.push_back(b[j]);
            j++;
        }
        
        return Union;
    }
};
/*
If M = size of array 'a', N = size of array 'b', then:
TC-> O(M + N)
SC-> Union (vector): O(M+N)ASC
*/